# This workflow will do a clean installation of node dependencies, cache/restore them, build the source code and run tests across different versions of node
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-nodejs

name: Pull Request

env:
  node_version: 18
  artifact_retention_days: 3

on: pull_request

jobs:
  Install:
    runs-on: ubuntu-latest

    outputs:
      typecheckOutcome: ${{ steps.typecheck.outcome }}
      lintOutcome:      ${{ steps.lint.outcome }}
      bundleOutcome:    ${{ steps.bundle.outcome }}

    steps:
    - uses: actions/checkout@v3
    - name: Use Node.js ${{ env.node_version }}
      uses: actions/setup-node@v3
      with:
        node-version: ${{ env.node_version }}
        cache: 'yarn'
        
    - name: Install dependencies
      id: install
      run: yarn install --frozen-dependencies
      
    - name: Typecheck
      id: typecheck
      continue-on-error: true
      run: yarn typecheck > typecheck-logs.txt
      
    - name: Lint
      id: lint
      continue-on-error: true
      run: yarn lint

    - name: Bundle
      id: bundle
      continue-on-error: true
      run: yarn bundle

    - name: Upload logs
      uses: actions/upload-artifact@v3
      with:
        name: logs
        retention-days: ${{ env.artifact_retention_days }}
        path: |
          typecheck-logs.txt
          lint-logs.txt
          bundle-logs.txt

  Typecheck:
    runs-on: ubuntu-latest
    needs: install

    env:
      typecheckOutcome: ${{needs.install.outputs.typecheckOutcome}}

    steps:
      - name: Report success
        if: ${{ env.typecheckOutcome == 'success' }}
        run: exit 0

      - name: Download logs
        if: ${{ env.typecheckOutcome != 'success' }}
        uses: actions/download-artifact@v3
        with:
          name: logs

      - name: Report failure
        if: ${{ env.typecheckOutcome != 'success' }}
        run: |
          cat typecheck-logs.txt
          exit 1

  Lint:
    runs-on: ubuntu-latest
    needs: install

    env:
      lintOutcome: ${{needs.install.outputs.lintOutcome }}

    steps:
      - name: Report success
        if: ${{ env.lintOutcome == 'success' }}
        run: exit 0

      - name: Download logs
        if: ${{ env.lintOutcome != 'success' }}
        uses: actions/download-artifact@v3
        with:
          name: logs

      - name: Report failure
        if: ${{ env.lintOutcome != 'success' }}
        run: |
          cat lint-logs.txt
          exit 1

  Bundle:
    runs-on: ubuntu-latest
    needs: install

    env:
      bundleOutcome: ${{needs.install.outputs.bundleOutcome}}

    steps:
      - name: Report success
        if: ${{ env.bundleOutcome == 'success' }}
        run: exit 0
      
      - name: Download logs
        if: ${{ env.bundleOutcome != 'success' }}
        uses: actions/download-artifact@v3
        with:
          name: logs

      - name: Report failure
        if: ${{ env.bundleOutcome != 'success' }}
        run: |
          cat bundle-logs.txt
          exit 1
